"Titre minier"
type Titre {
  """
  L'__id__ du titre est constituée de la concaténation:
  - du type en 3 lettres.
  - du nom du titre en minuscule, sans caractères spéciaux, avec des tirets au lieu des espaces.

  Exemples: _con-saint-elie_ ou _per-pedral_.
  """
  id: ID!
  nom: String!
  type: Type!
  domaine: Domaine!
  references: [Reference]
  statut: Statut!
  substances: [Substance]
  demarches: [Demarche]
}

type Type {
  id: TypeId!
  nom: String!
}

type Domaine {
  id: DomaineId!
  nom: String!
}

type Statut {
  id: StatutId!
  nom: String!
  couleur: Couleur!
}

type Reference {
  type: String
  nom: String!
}

type Demarche {
  id: ID!
  type: DemarcheType!
  ordre: Int!
  statut: DemarcheStatut!
  etapes: [Etape]
}

type DemarcheType {
  id: ID!
  nom: String!
  dureeMax: Int!
  renouvelable: Boolean
  exception: Boolean
  ordre: Int
}

type DemarcheStatut {
  id: DemarcheStatutId!
  nom: String!
  couleur: Couleur!
}

type Etape {
  id: ID!
  type: EtapeType!
  statut: EtapeStatut!
  ordre: Int!
  date: String!
  duree: Int!
  surface: Float
  emprise: Emprise
  substances: [TitreSubstance]
  geojsonMultiPolygon: GeojsonMultiPolygon
  geojsonPoints: GeojsonPoints
  titulaires: [Entreprise]
  amodiataires: [Entreprise]
  utilisateurs: [Utilisateur]
}

type EtapeType {
  id: ID!
  nom: String!
  acceptationAuto: Boolean
}

type EtapeStatut {
  id: EtapeStatutId!
  nom: String!
  couleur: Couleur!
}

type Emprise {
  id: EmpriseId!
  nom: String!
}

type TitreSubstance {
  id: ID!
  nom: String!
  domaine: Domaine
  type: String
  usage: String!
  symbole: String
  alias: [String]
  gerep: Int
  description: String
  legal: SubstanceLegal!
  connexe: Boolean
  ordre: Int
}

type Entreprise {
  id: ID!
  nom: String!
  service: String
  site: String
  email: String
  telephone: String
  adresse1: String
  adresse2: String
  codePostal: Int
  cedex: Int
  ville: String
}

type Utilisateur {
  id: ID!
  nom: String!
  prenom: String
  email: String
  telephoneMobile: String
  telephoneFixe: String
  administrationId: String
  entrepriseId: String
}

"tauuust"
input InputTitre {
  """
  L'__id__ du titre est constituée de la concaténation:
  - du type en 3 lettres.
  - du nom du titre en minuscule, sans caractères spéciaux, avec des tirets au lieu des espaces.

  Exemples: _con-saint-elie_ ou _per-pedral_.
  """
  id: ID!
  nom: String!
  type: InputType!
  domaine: InputDomaine!
  references: [InputReference]
}

input InputType {
  id: TypeId!
}

input InputDomaine {
  id: DomaineId!
}

input InputReference {
  type: String
}

input InputDemarche {
  titreId: String!
  id: ID!
  type: InputDemarcheTypeId!
  ordre: Int
}

input InputDemarcheTypeId {
  id: ID!
}

input InputEtape {
  id: ID!
  type: InputEtapeTypeId!
  duree: Int!
  date: String!
  surface: Float
  emprise: [InputEmpriseId]
  substances: [InputSubstanceId!]
}

input InputSubstanceId {
  id: ID!
}

input InputEtapeTypeId {
  id: ID!
}

input InputEmpriseId {
  id: EmpriseId!
}

"""
- __apx__: Autorisation de prospections préalables (M, H, C)
- __arc__: Autorisation de recherches (C)
- __arg__: Autorisation de recherches (G)
- __axm__: Autorisation d'exploitation (M)
- __prx__: Permis exclusif de recherches (M, G, S, C)
- __prh__: Permis exclusif de recherches (H)
- __pxc__: Permis exclusif de carrières (C)
- __pxg__: Permis d'exploitation (G)
- __pxm__: Permis d'exploitation (M)
- __cxx__: Concession (M, H, G, S, C)
"""
enum TypeId {
  apx
  arc
  arg
  axm
  prx
  prh
  pxc
  pxg
  pxm
  cxx
}

"""
- __m__: Minéraux et métaux
- __h__: Substances énergétiques
- __s__: Stockage
- __g__: Géothermie
- __c__: Carrières
- __w__: Granulats marins
"""
enum DomaineId {
  m
  h
  s
  g
  c
  w
}

"""
- __ins__: En instruction
- __val__: Valide
- __ech__: Échu
"""
enum StatutId {
  dmi
  dmc
  val
  mdi
  ech
}

"""
- __ter__: À terre
- __mer__: En mer
"""
enum EmpriseId {
  ter
  mer
}

"""
- __ins__: En instruction
- __acc__: Acceptée
- __rej__: Rejetée
- __eco__: En construction
- __dep__: Déposée
- __cls__: Classée sans suite
- __ret__: Retirée
"""
enum DemarcheStatutId {
  ins
  acc
  rej
  eco
  dep
  cls
  ret
}

"""
- __afa__: Non fait
- __eco__: En cours
- __ter__: Terminé
"""
enum EtapeStatutId {
  afa
  eco
  ter
}

enum Couleur {
  neutral
  success
  warning
  error
}
